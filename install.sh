#!/bin/bash

# Script para construir e instalar um projeto Go CLI localmente
# (para projetos j√° presentes no sistema de arquivos)

set -euo pipefail

# Cores para mensagens
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Verificar se o Go est√° instalado
if ! command -v go &> /dev/null; then
    echo -e "${RED}Erro: Go n√£o est√° instalado.${NC}"
    echo -e "Instale o Go primeiro: https://golang.org/doc/install"
    exit 1
fi

# Verificar se estamos no diret√≥rio raiz do projeto Go
if [ ! -f "go.mod" ]; then
    echo -e "${RED}Erro: N√£o encontrado arquivo go.mod${NC}"
    echo -e "Execute este script do diret√≥rio raiz do projeto Go"
    exit 1
fi

# Obter nome do bin√°rio (usa nome do diret√≥rio atual por padr√£o)
DEFAULT_BINARY=$(basename "$(pwd)")
read -rp "Nome do bin√°rio [${DEFAULT_BINARY}]: " BINARY_NAME
BINARY_NAME=${BINARY_NAME:-$DEFAULT_BINARY}

# Diret√≥rios de instala√ß√£o (tenta system-wide primeiro)
INSTALL_DIRS=("/usr/local/bin" "${HOME}/.local/bin")

# Fun√ß√£o para instalar/sobrescrever bin√°rio
install_binary() {
    local binary_path=$1
    local install_dir=$2
    
    echo -e "${YELLOW}Instalando em ${install_dir}...${NC}"
    
    # Criar diret√≥rio se n√£o existir
    sudo mkdir -p "${install_dir}" 2>/dev/null || mkdir -p "${install_dir}" 2>/dev/null
    
    # Tentar instalar com sudo primeiro
    if sudo mv -f "$binary_path" "${install_dir}/${BINARY_NAME}" 2>/dev/null; then
        sudo chmod +x "${install_dir}/${BINARY_NAME}"
        echo -e "${GREEN}Bin√°rio instalado com sucesso em ${install_dir}/${BINARY_NAME}${NC}"
        return 0
    else
        # Tentar sem sudo
        if mv -f "$binary_path" "${install_dir}/${BINARY_NAME}" 2>/dev/null; then
            chmod +x "${install_dir}/${BINARY_NAME}"
            echo -e "${GREEN}Bin√°rio instalado com sucesso em ${install_dir}/${BINARY_NAME}${NC}"
            return 0
        fi
    fi
    
    return 1
}

# Construir o projeto
echo -e "${GREEN}Construindo o bin√°rio...${NC}"
if ! go build -o "${BINARY_NAME}" .; then
    echo -e "${RED}Falha ao construir o bin√°rio${NC}"
    exit 1
fi

# Tentar instalar nos diret√≥rios poss√≠veis
for dir in "${INSTALL_DIRS[@]}"; do
    if install_binary "./${BINARY_NAME}" "$dir"; then
        INSTALL_DIR="$dir"
        break
    fi
done

# Verificar se a instala√ß√£o foi bem-sucedida
if [ -z "${INSTALL_DIR:-}" ]; then
    echo -e "${RED}N√£o foi poss√≠vel instalar o bin√°rio automaticamente.${NC}"
    echo -e "O bin√°rio foi constru√≠do em: $(pwd)/${BINARY_NAME}"
    echo -e "Voc√™ pode mov√™-lo manualmente para um diret√≥rio no seu PATH"
    exit 1
fi

# Verificar se o diret√≥rio est√° no PATH
if [[ ":$PATH:" != *":${INSTALL_DIR}:"* ]]; then
    echo -e "${YELLOW}Aviso: ${INSTALL_DIR} n√£o est√° no seu PATH. Adicione ao seu shell rc:${NC}"
    echo -e "export PATH=\"${INSTALL_DIR}:\$PATH\""
fi

echo -e "${GREEN}Instala√ß√£o conclu√≠da!${NC}"
echo -e "Execute com: ${BINARY_NAME} --help"